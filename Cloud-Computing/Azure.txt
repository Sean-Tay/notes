Azure
	Abbreviations:
		AD:					Active Directory.
		ARM:				Azure Resource Manager.
	
	Description:
	
	Resources:
	
	Concepts:
		Serivce Principal:	Azure AD account whose metadata (i.e. Client ID, Secret) is managed by Users and not Azure. This Account can be used anywhere outside of Azure.
		Managed Identity:	A special type of Service Principal where Azure manages the metadata as well. This Account can only be used by other Azure-managed services.
			System Assigned: Tied to the lifecycle of an Azure Resource.
			User Assigned: 	Independent lifecycle, can be shared across Azure Resources.

		Resource Group:		A logical container to contain Azure Resources.

		Event Hub:			Analogous to Kafka Event Queues, these expose an Event 'Pull' Model for Consumers.
		Event Grid:			Router for generated Events; usually to 'Push' Events from their Source to an Event Hub or a Webhook. Note: Has to be in the same Resource Group as the Event Source.

		Storage:			Provides Blob Storage capability.
			Storage Account: Contains one or more Storage Containers.
			Storage Container: Contains one or more Blob Files.

		ARM Template:		Specifies configuration of specific Azure Resources.
	
	Details:
		ARM Template Syntax: https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/syntax
			<name>.params.json: File that defines arguments to be passed into the deploy.json.
				{
					"$schema": "https://schema.management.azure.com/schemas/<release-date>/deploymentParameters.json#",
					"contentVersion": "<version>", // Specify the version of this File - e.g. "1.0.0.0"
					"parameters": {
						"<parameter-name>": {
							"value": "<argument>"
						},

						// ...
					}
				}

			<name>.deploy.json: File that specifies how Microsoft Resources should be deployed, and the possible parameters for the deployment.
				{
					"$schema": "https://schema.management.azure.com/schemas/<release-date>/deploymentTemplate.json#",
					"contentVersion": "<version>", // Specify the version of this File - e.g. "1.0.0.0"
					"parameters": {
						"<parameter-name>": {
							"value": {
								"type": "<parameter-type>", // e.g. "string"
								"defaultValue": "<default-value>",
								"metadata": {
									"description": "<parameter-documentation>",
								}
							}
						},

						// ...
					},
					"variables": {
						"<variable-name>": "<variable-value>", // "['<value>']" for computed values
							// Azure Template Functions:
								// concat('<string>', ...)
								// parameters('<parameter-name>')
								// variables('<variable-name>')
					},
					"resources": [
						{
							// For Standalone Resources:
							"type": "<azure-resource-provider-namespace>/<azure-resource-type>",
							"apiVersion": "<api-version>",
							"name": "<resource-custom-name>",
							"location": "<geo-location>", // "[resourceGroup().location]"

							"properties": {
								// Specifies the actual configuration of the <azure-resource-type>

								// ...
							},

							// ...
						},
						{
							// For Nested Resources (i.e. Resources that have a Parent Resource):
							"type": "<parent-type>/<child-type>",
							"name": "[concat('<parent-name>', '/', '<child-name>')]",
							"dependsOn": [
								"[resourceId('<parent-type>', '<parent-name>')]"
							],

							// ...
						}

						// ...
					],

					// ...
				}
	
	Commands:
		az deployment group validate # Deploy the Resources defined in the <template-file>.json with the specified configuration Parameters. If the deployment succeeds, it should be listed under the Resource Group "deployments" within the Azure Web Portal.
			--resource-group <resource-group> # Specify the Resource Group that the deployment should execute under.
			--template-file <name>.deploy.json
			--parameters <name>.params.json
			<parameter>="<value>"
	
