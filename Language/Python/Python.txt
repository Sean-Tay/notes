Python
	Abbreviations: 
	
	Description: 
	
	Resources: 
	
	Concepts: 
	
	Details:
		# Python 3

		# Variable Assignment:
			<variable-name>: <type> = <value>

			<true-variable> = True
			<false-variable> = False
			<null-variable> = None

		# Value Conversion:
			# Integer: int(<value>)
			# String: string(<value>)

		# Math:
			import math

			# Methods
			math.floor()

		# For Loops:
			for i in range(<stop>):
				# ...

			for i in range(<start>, <stop>, <step>):
				# ...

			for item in <collection>:
				# ...

		# Lists:
			<list-variable> = []

			<list-variable>.append(<value>)
			item = <list-variable>.pop()

			size = len(<list-variable>)
	
		# Deque:
			from collections import deque
			
			<queue-variable> = deque([<initial-element>, ... ])
			<queue-variable>.append(<value>)
			item = <queue-variable>.popLeft()

		# Heaps:
			# Note: Min Heap Implementation
			import heapq

			<pqueue-variable> = []
			heapq.heappush(<pqueue-variable>, [<priority>, <item>])
			item = heapq.heappop()
			# Peek: <pqueue-variable>[0]

		# Sets:
			<set-variable> = set()

			<set-variable>.add(<item>)
			<set-variable>.remove(<item>)

			# Test Membership: item in <set-variable>
			# Test Non-Membership: item not in <set-variable>

		# Dicts / Maps:
			<map-variable> = {}

			item = <map-variable>.get(<key>, <default-value>)
			<map-variable>[<key>] = item

			# Test Membership: item in <map-variable>
			# Test Non-Membership: item not in <map-variable>

			for key in <map-variable>:
				# ...

		# Functions:
			def <function-name>(arg: <arg-type>, ... ) -> <return-type> :
				# ...

		# Classes:
			class <class-name>:
				def __init__(self, <param>, ...):
					self.<variable> = <data>

				# ...

	Commands:
		
	
