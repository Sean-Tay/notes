SCSS
	Abbreviations:
		CSS: 					Cascading Style Sheets.
		SCSS:					Sassy CSS.
	
	Description:				A superset of CSS3 that adds programmatic features.
	
	Resources:
		
	
	Concepts:
		Rule:					A <{key | rule}>: <value> pair specifying a CSS property.
		Rule-Set:				A grouping of CSS Rules that is usually applied to <css-selectors>.

		List:					A comma or space delimited series of Values.
	
	Details:
		SCSS Syntax needs to be compiled down to CSS before it can be used.
		SCSS Files should have the .scss extension, NOT .sass.

		Features:
			Imports:
				@import '<url>';
				@use '_<scss-file-name>'; // Partials: SCSS Files with a leading underscore in their name will not be compiled to CSS.
				@use '<scss-file-path>';

			Variable Definition:
				$<variable-name>: <value>;

				<css-selector>-base-example {
					<rule>: $<variable-name>; // Variable Usage for a CSS Rule Value.
				}

				<css-selector>#{$<variable-name>}-interpolation-example { // Variable Usage for a CSS Selector Name.
					// ...
				}

			Nested Rule-Sets:
				<outer-css-selector> {

					// ...

					<inner-css-selector> { // Equivalent to '<outer-css-selector> <inner-css-selector>'
						// ... 
					}

					// ...

					// Note: & will refer to <outer-css-selector>.
					// Note: @at-root will force the <inner-css-selector> to be at the level of the <outer-css-selector>.
				}

			Mixins: Use function-like Rule-Sets within other Rule-Sets.
				@mixin <mixin-name>($<arg1>, ...) {
					// ...
				}

				<css-selector> {
					@include <mixin-name>(<val1>, ...);
					// ...
				}

			Extension / Inheritance: Apply Rules from a 'virtual' Rule-Set to another. The 'virtual' Rule-Set will have no CSS footprint in the compiled CSS if not used.
				%<virtual-rule-set> {
					// ...
				}

				<css-selector> {
					@extends %<virtual-rule-set>;
					// ...
				}
	
	Commands:
		
	
